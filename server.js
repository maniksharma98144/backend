const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const compression = require('compression');

const swaggerUI = require('swagger-ui-express');
const swaggerJsDoc = require('swagger-jsdoc');

const keys = require('./config/keys');

require('./models/user');
require('./models/tweets');

mongoose.connect(keys.mongoURI, {
    useNewUrlParser: true,
    useCreateIndex: true,
    useUnifiedTopology: true,
});

const db = mongoose.connection;
db.on("error", console.error.bind(console, "connection error: "));
db.once("open", function () {
    console.log("db Connected successfully");
});

const api = require('./api');

const app = express();
app.use(cors());
app.use(compression());

app.use(express.json());
app.use(express.urlencoded({
    extended: false
}));

const swaggerOptions = {
    swagger: "2.0",
    swaggerDefinition: {
        info: {
            title: 'Test API',
            version: '1.0.0',
            description: 'Test Express API with autogenerated swagger doc'
        },
        host: "localhost:80",
        basePath: "/api",
        schemes: ["http", "https"],
        consumes: ["application/json"],
        produces: ["application/json"]

    },
    apis: ['api/*.js'],
};

const specs = swaggerJsDoc(swaggerOptions);
app.use('/api-docs', swaggerUI.serve, swaggerUI.setup(specs, {
    explorer: true
}));

app.use('/api', api)

module.exports = app;